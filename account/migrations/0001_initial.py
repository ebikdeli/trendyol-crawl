# Generated by Django 4.2.2 on 2023-06-30 09:42

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import sorl.thumbnail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=40, unique=True, validators=[django.core.validators.MaxLengthValidator(33, 'username is too long'), django.core.validators.MinLengthValidator(3, 'username is too short')], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email')),
                ('phone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.MaxLengthValidator(13, 'phone cannot be longer than 13 chars'), django.core.validators.MinLengthValidator(11, 'phone cannot be shorter than 11 chars')], verbose_name='phone')),
                ('first_name', models.CharField(blank=True, max_length=50, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=50, verbose_name='last name')),
                ('picture', sorl.thumbnail.fields.ImageField(blank=True, upload_to='', verbose_name='user picture')),
                ('score', models.IntegerField(default=0, verbose_name='user score')),
                ('score_lifetime', models.IntegerField(default=0, verbose_name='user score')),
                ('discount_value', models.DecimalField(decimal_places=0, default=0, max_digits=9, verbose_name='user discount(value)')),
                ('discount_percent', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MaxValueValidator(100, 'percent could not be more than 100'), django.core.validators.MinValueValidator(0, 'percent could not be less than 0')], verbose_name='user discount(percent)')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='is staff')),
                ('is_admin', models.BooleanField(default=False, verbose_name='is admin')),
                ('slug', models.SlugField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='updated')),
                ('is_social_login', models.BooleanField(default=False, verbose_name='is social login')),
                ('user_db_backend', models.CharField(blank=True, choices=[('regular', 'regular'), ('api', 'api'), ('social', 'social')], max_length=100, verbose_name='user db backend')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(blank=True, max_length=50, verbose_name='province, state or municipality')),
                ('city', models.CharField(blank=True, max_length=50, verbose_name='city')),
                ('line', models.TextField(blank=True, verbose_name='line')),
                ('code', models.CharField(blank=True, max_length=3, validators=[django.core.validators.MaxLengthValidator(4, 'phone code cannot be longer than 4 chars'), django.core.validators.MinLengthValidator(2, 'phone code cannot be shorter than 2 chars')], verbose_name='phone code')),
                ('phone', models.CharField(blank=True, max_length=13, validators=[django.core.validators.MaxLengthValidator(9, 'phone cannot be longer than 9 chars'), django.core.validators.MinLengthValidator(7, 'phone cannot be shorter than 7 chars')], verbose_name='phone number')),
                ('postal', models.CharField(blank=True, max_length=10, verbose_name='postal')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='updated')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='address_user', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'ordering': ('-updated',),
            },
        ),
    ]
